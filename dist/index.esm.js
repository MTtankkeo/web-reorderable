var e;!function(e){e[e.NONE=0]="NONE",e[e.REORDERING=1]="REORDERING",e[e.REORDERED=2]="REORDERED"}(e||(e={}));class t extends HTMLElement{constructor(){super(...arguments),this._listeners=[],this._statusListeners=[],this._status=e.NONE}get status(){return this._status}set status(e){this._status!=e&&this.notifyStatusListeners(this._status=e)}set onChange(e){null!=e&&this.addListener(e)}addListener(e){console.assert(!this._listeners.includes(e),"Already exists a given callback."),this._listeners.push(e)}removeListener(e){console.assert(this._listeners.includes(e),"Already not exists a given callback."),this._listeners.push(e)}addStatusListener(e){console.assert(!this._statusListeners.includes(e),"Already exists a given callback."),this._listeners.push(e)}removeStatusListener(e){console.assert(this._statusListeners.includes(e),"Already not exists a given callback."),this._listeners.push(e)}notifyListeners(e,t,s){this._listeners.forEach((n=>n(e,t,s)))}notifyStatusListeners(e){this._statusListeners.forEach((t=>t(e)))}createState(e){return{items:e}}connectedCallback(){var e;const t=[];for(let s=0;s<this.children.length;s++){const n=this.children.item(s),i=null!==(e=n.getAttribute("key"))&&void 0!==e?e:n.getAttribute("reorderable-key");if(!i)throw new Error("Should be defining key attributes missing from reorderable element items so that items can be identified.");t.push({key:i,element:n})}this.onInit(),this.onUpdateState(this.createState(t))}}class s extends t{onInit(){console.log("on init")}onUpdateState(e){console.log("on update state",e)}onUpdateContext(e){console.log(e)}}customElements.define("reorderable-list",s);class n{}class i extends HTMLElement{connectedCallback(){this.onInit(),this.onInitEvent()}onInit(){let e=this.parentElement;for(;e;){if(e instanceof t)return this.target=e;e=e.parentElement}throw new Error("<reorderable-drag> must have a reorderable ancestor element.")}onInitEvent(){}}customElements.define("reorderable-drag",i);const r=new CSSStyleSheet;r.insertRule("\n    reorderable-list {\n        display: flex;\n        flex-direction: column;\n    }\n"),r.insertRule("\n    reorderable-grid {}\n"),document.adoptedStyleSheets=[r];export{i as ReorderableDragElement,t as ReorderableElement,n as ReorderableGridElement,s as ReorderableListElement};
//# sourceMappingURL=index.esm.js.map
