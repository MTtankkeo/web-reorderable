class e extends HTMLElement{}class n extends e{connectedCallback(){console.log("connected")}}customElements.define("reorderable-list",n);class t{}class r extends HTMLElement{connectedCallback(){this.onInit(),this.onInitEvent()}onInit(){let n=this.parentElement;for(;n;){if(n instanceof e)return this.target=n;n=n.parentElement}throw new Error("<reorderable-drag> must have a reorderable ancestor element.")}onInitEvent(){}}customElements.define("reorderable-drag",r);const l=new CSSStyleSheet;l.insertRule("\n    reorderable-list {\n        display: flex;\n        flex-direction: column;\n    }\n"),l.insertRule("\n    reorderable-grid {}\n"),document.adoptedStyleSheets=[l];export{r as ReorderableDragElement,e as ReorderableElement,t as ReorderableGridElement,n as ReorderableListElement};
//# sourceMappingURL=index.esm.js.map
